The Penn Arabic Treebank (ATB) syntactic guidelines (Maamouri et al., 2004) were purposefully borrowed without major modification from English (Marcus et al., 1993). Next we show that the ATB is similar to other tree- banks in gross statistical terms, but that annotation consistency remains low relative to English (§3). We then use linguistic and annotation insights to develop a manually annotated grammar for Arabic (§4). When the maSdar lacks a determiner, the constituent as a whole resem bles the ubiquitous annexation construct � ?f iDafa. We propose a limit of 70 words for Arabic parsing evaluations. In our grammar, features are realized as annotations to basic category labels. We start with noun features since written Arabic contains a very high proportion of NPs. mark- ContainsVerb is especially effective for distinguishing root S nodes of equational sentences. Preprocessing the raw trees improves parsing performance considerably.9 We first discard all trees dominated by X, which indicates errors and non-linguistic text. At the phrasal level, we remove all function tags and traces. The intuition here is that the role of a discourse marker can usually be de 9 Both the corpus split and pre-processing code are avail-. able at http://nlp.stanford.edu/projects/arabic.shtml. 6 Joint Segmentation and Parsing. Lattice parsing (Chappelier et al., 1999) is an alternative to a pipeline that prevents cascading errors by placing all segmentation options into the parse chart. We extend the Stanford parser to accept pre-generated lattices, where each word is represented as a finite state automaton.