Strategic Lazy Incremental Copy Graph Unification 1. 2. 3. 4. The SharedArcs procedure takes two lists of arcs as its arguments and gives two lists of arcs each of which contains arcs whose labels exists in both lists with the same arc label order. 5. node2 = Dereferencelnode2). (sharedst, shareds2) = SharedArcs(nodel.arcs, node2.arcs). complements1 = ComplementArcs(node|.arcs, node2.arcs). complements2 = ComplementArcs(node2.arcs, nodel.arcs). Return(outnode). 6). That is, antecedent nodes in the COPY-DEPENDENCY values are also copied. ENDIF Returo(newnode). Return(Nil_). ENDIF Return(newarcs). Unlike the analysis case, unification of features for semantic representations tends to fail. In such cases, the SING unification method obtains efl]ciency gains. Structure sharing avoids memory wastage'. This reduces repeated calculation of substructures. The SING unification method introduces the concept of feature unification strategy. 'the method treats features tending to fail in unification first. TypeSymbol2 4Â¢"