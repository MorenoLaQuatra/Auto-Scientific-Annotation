Foma: a finite-state compiler and library Foma is a compiler, programming language, and C library for constructing finite-state automata and transducers for various uses. One of Foma’s design goals has been compatibility with the Xerox/PARC toolkit. This makes it straightforward to build spell-checkers from morphological transducers by simply extracting the range of the transduction and matching words approximately. complement, containment operators / ./. Horizontal lines separate precedence classes. In fact, many of the internally complex operations of Foma are built through a reduction to this type of logical expressions. Below is a simple example of the format: Multichar_Symbols +Pl +Sing LEXICON Root Nouns; LEXICON Nouns cat Plural; church Plural; LEXICON Plural +Pl:%ˆs #; +Sing #; 5. network = fsm_regex("a+ b+"); 6. result = fsm_match(fsm, s); 7. printf("Regex matches"); 9. Several wide- coverage morphological analyzers specified in the LEXC/xfst format have been compiled successfully with Foma. It also